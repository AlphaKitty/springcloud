<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>com.zyl.cloud</groupId>
        <artifactId>cloud</artifactId>
        <version>1.0.0</version>
        <relativePath/>
    </parent>

    <artifactId>consumer</artifactId>
    <name>consumer</name>
    <description>Demo project for Spring Boot</description>

    <properties>
        <java.version>11</java.version>
    </properties>

    <dependencies>
        <dependency>
            <groupId>com.zyl.cloud</groupId>
            <artifactId>base</artifactId>
            <version>1.0.0</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
        </dependency>
        <!--<dependency>-->
        <!--    <groupId>com.zyl.cloud</groupId>-->
        <!--    <artifactId>provider</artifactId>-->
        <!--    <version>1.0.0</version>-->
        <!--</dependency>-->
    </dependencies>

    <build>
        <plugins>
            <!--加上这个插件之后能打可以执行的jar包 但会替换掉用于被依赖的jar 导致其他子模块引用不到-->
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <!-- 所以要加这个标识 给可直接执行的jar包加一个exec后缀 这样被依赖jar和可执行jar就可以同时存在了 -->
                <configuration>
                    <classifier>exec</classifier>
                </configuration>
            </plugin>
        </plugins>
    </build>

</project>
        <!--有<optional>true</optional>标志 所以必须显式引用-->
